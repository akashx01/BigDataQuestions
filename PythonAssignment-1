Q1.  Why do we call Python as a general purpose and high-level programming language?

Ans:-Python is called as a high-level programming language because its syntax so closely resembles the English language.
     High-level means it’s more readable to humans and less readable to computers. Likewise, Lower-level means less readable for humans and more readable for computers. 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q2. Why is Python called a dynamically typed language?

Ans:-Python is called dynamically typed language because We don't have to declare the type of a variable or manage the memory while assigning a value to a variable in Python. 
     Other languages like C, C++, Java, etc.., there is a strict declaration of variables before assigning values to them. 
     We have to declare the kind of variable before assigning a value to it in the languages C, C++, Java, etc..,
     Python don't have any problem even if we don't declare the type of variable. It states the kind of variable in the runtime of the program.
     ----------------------------------------------------------------------------------------------------------------------------------------------------------------
Q3. List some pros and cons of Python programming language?   

Ans:- Pros Of Python:-

    1.Versatile, Easy to read, learn and write
    2.User-friendly data structures 
    3.High-level language 
    4.Dynamically typed language(No need to mention data type based on the value assigned, it takes data type) 
    5.Object-Oriented and Procedural  Programming language
    6.Portable and Interactive
    
    Cons Of Python:-
    
    1.Python is slower than C or C++
    2.Python is not a very good language for mobile development . It is seen as a weak language for mobile computing.
    3.Python is not a good choice for memory intensive tasks. Due to the flexibility of the data-types, Python's memory consumption is also high.
    4.Python has limitations with database access
    5.Python programmers cited several issues with the design of the language. Because the language is dynamically typed , it requires more testing and has errors that only show up at runtime .
    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q4. In what all domains can we use Python?

Ans:-Python is a multipurpose programming language. There are some area listed bilow where we can use the python

  1.Web Development
  2.Networking and Internet Development 
  3.Machine Learning 
  4.Scientific Computation
  ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q5. What are variable and how can we declare them? 

Ans:-Python Variable is containers which store values. Python is not “statically typed”. We do not need to declare variables before using them or declare their type.
A variable is created the moment we first assign a value to it. A Python variable is a name given to a memory location. It is the basic unit of storage in a program.
 example:- var= "AKASH"
           print(var) 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q6. How can we take an input from the user in Python?

Ans:-In the real-world application, we often need to take input from the user and store that data into a specific database or perform an action based on the user input.
   To perform these types of actions, python provides a function named input() which waits for the user. We can easily take input from the user by using this function
   Let’s start with a very basic example in which we will take the name of the user by using this input() function.
                         
                           print('Enter Your Name: ')

                          # Using input() function for taking input from the user
                           users_name = input()

                          print('Hello ' + users_name)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q7. What is the default datatype of the value that has been taken as an input using input() function?

Ans:-In Python, we implement the input() function to get user input. The input function translates whatever you give it as input into a string.
    Even if an integer value is entered, the input() method accepts it as a string.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q8. What is type casting?

Ans:-Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users. 

There can be two types of Type Casting in Python –

Implicit Type Casting
Explicit Type Casting

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Ans:-In Python, we use input() function to take input from the user.user can take multiple values or inputs in one line by split() methods. 

Using split() method : 
This function helps in getting multiple inputs from users. It breaks the given input by the specified separator. 
If a separator is not provided then any white space is a separator. Generally, users use a split() method to split a Python string but one can use it in taking multiple inputs.

Syntax : 

input().split(separator, maxsplit)

Example:-

# Python program showing how to
# multiple input using split
  
# taking two inputs at a time
x, y = input("Enter two values: ").split()
print("Number of boys: ", x)
print("Number of girls: ", y)
print()
  
# taking three inputs at a time
x, y, z = input("Enter three values: ").split()
print("Total number of students: ", x)
print("Number of boys is : ", y)
print("Number of girls is : ", z)
print()
  
# taking two inputs at a time
a, b = input("Enter two values: ").split()
print("First number is {} and second number is {}".format(a, b))
print()
  
# taking multiple inputs at a time 
# and type casting using list() function
x = list(map(int, input("Enter multiple values: ").split()))
print("List of students: ", x)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q10. What are keywords?

Ans:-Keywords are reserved words in Python that are used to trigger specific tasks. We cannot use a keyword as a variable name, function name, or any other identifier
     since these keywords each hold a special meaning. All of the keywords in Python are lowercase.

Example:-print:	Prints to console.
         while:	Controls the flow of the code by starting a loop.
         for:	Iterates over items of a collection in the order that they appear.....
         break:	Exits the (loop) cycle.
         if:	Determines which statements are going to be executed.
         elif:	Stands for “else if”. If the first test evaluates to False, then this keyword checks for the next one.
         else:	Is optional. The statement after the else keyword is executed when the if condition is False.
         is	:Tests for object identity.
         not:	Negates a Boolean value.
         and:	All conditions in a Boolean expression must be met.
         or:	At least one condition must be met.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q11. Can we use keywords as a variable? Support your answer with reason.

Ans:- NO we cannot use keyword as a variable because Python keywords are special reserved words that have specific meanings and purposes and can’t be used for 
    anything but those specific purposes. If keywords were allowed as variable names, it would be very hard to tell (for the developers and the compilers) 
    whether something was a variable or a keyword. For example, what does the following mean?

if(x == 10)

Is it an if-statement, or calling a function called if?

Neither the developer nor the compiler would be able to tell.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q12. What is indentation? What's the use of indentaion in Python?

Ans:-Indentation in Python refers to the (spaces and tabs) that are used at the beginning of a statement. The statements with the same indentation belong to the
same group called a suite.

Consider the example of a correctly indented Python code statement mentioned below.


if a==1:
    print(a)
    if b==2:
        print(b)
print('end')
In the above code, the first and last line of the statement is related to the same suite because there is no indentation in front of them.So after executing 
first "if statement", the Python interpreter will go into the next statement. If the condition is not true, it will execute the last line of the statement.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q13. How can we throw some output in Python?
Ans:- We can throw some output in Python with the help of print() function.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q14. What are operators in Python?

Ans:-Operators are special symbols that perform operations on variables and values. For example,

print(5 + 6)   # 11
Here, + is an operator that adds two numbers: 5 and 6.
Types of Python Operators
Here's a list of different types of Python operators that we will learn in this tutorial.

1.Arithmetic operators(+,-,*,%,/)
2.Assignment Operators(=,+=,-=,*=,/=,%=)
3.Comparison Operators(==,!=,<,>,>=,<=)
4.Logical Operators(and,or,not)
5.Bitwise Operators(&,|,~	,^,>>)
6.Special Operators(is, is not)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q15. What is difference between / and // operators?
Ans:-| Operator

The | operator computes the logical OR of its operands. The result of x | y is true if either x or y evaluates to true. Otherwise, the result is false.

The | operator evaluates both operands even if the left-hand operand evaluates to true, so that the operation result is true regardless of the value of the right-hand operand.
 
|| Operator

The conditional logical OR operator ||, also known as the "short−circuiting" logical OR operator, computes the logical OR of its operands.

The result of x || y is true if either x or y evaluates to true. Otherwise, the result is false. If x evaluates to true, y is not evaluated.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
``
Ans:-     print(iNeuroniNeuroniNeuroniNeuron)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

Ans:-#Python program to check odd or even

 number = int(input("Enter a number: "))

if number % 2 == 0:
    print("The number is even")
else:
    print("The number is odd")

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q18. What are boolean operator?

Ans:-A boolean expression is an expression that yields just the two outcomes: true or false. When we work with multiple boolean expressions or perform some action 
on them, we make use of the boolean operators. Since the boolean expression reveals true or false, the operations on these expressions also result in
either "true" or "false". Consequently, there are three types of boolean operators:

The AND operator (&& or "and")
The OR operator (|| or "or")
The NOT operator (not)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q19. What will the output of the following?
```
1 or 0

0 and 0

True and False and True

1 or 0 or 0
```
Ans:- 1 or 0 = 0
      0 and 0 = 1
      True and False and True= True
      1 or 0 or 0 = 0
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q20. What are conditional statements in Python?

Ans:-Conditional statements are also called decision-making statements. We use those statements while we want to execute a block of code
when the given conditionis true or false.
Type of condition statement in Python:
If statement.
If Else statement.
Elif statement.
Nested if statement.
Nested if else statement.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q21. What is use of 'if', 'elif' and 'else' keywords?
Ans:-if statement:-
If the condition following the keyword if evaluates as true, the block of code will execute.
Note that parentheses are not used before and after the condition check as in other languages.

if True:
  print('If block will execute!')
---------------
else statement:-
You can optionally add an else response that will execute if the condition is false:

if not True:
  print('If statement will execute!')
else:
  print('Else statement will execute!')
-------------------
 elif statement
Multiple conditions can be checked by including one or more elif checks after your initial if statement.
Just keep in mind that only one condition will execute:

z = 7

if z > 8:
  print("I won't print!") #this statement does not execute
elif z > 5:
  print("I will!") #this statement will execute
elif z > 6:
  print("I also won't print!") #this statement does not execute
else:
  print("Neither will I!") #this statement does not execute 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

Ans:-Program:
#Program to check the eligibility for voting

age = int(input("What is your age? "))

#Checking the age and displaying the message accordingly
if age >= 18:
 print("I can vote")
else:
 print("I can't vote")

OUTPUT:

What is your age? 23
I can vote
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans:-# Python Program to find Sum of Even and Odd Numbers in a List

NumList = []
Even_Sum = 0


Number = int(input("Please enter the Total Number of List Elements: "))
for i in range(1, Number + 1):
    value = int(input("Please enter the Value of %d Element : " %i))
    NumList.append(value)

for j in range(Number):
    if(NumList[j] % 2 == 0):
        Even_Sum = Even_Sum + NumList[j]

print("\nThe Sum of Even Numbers in this List =  ", Even_Sum)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

Ans:-#input first,Second and third number

num1=int(input("Enter First Number"))

num2=int(input("Enter Second Number"))

num3=int(input("Enter Third Number"))

#Check if first number is greater than rest of the two numbers.

if (num1> num2 and num1> num3):

    print("The Largest number is", num1)

#Check if Second number is greater than rest of the two numbers.

elif (num2 > num1 and num2> num3):

    print ("The Largest number is", num2)

else:
    print ("The Largest number is", num3)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q25. Write a program to display only those numbers from a list that satisfy the following conditions

 The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
#program

numbers = [12, 75, 150, 180, 145, 525, 50]
for i in numbers:
    if i > 500:
        break
    elif i > 150:
        continue
    elif i % 5 == 0:
        print(i)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q26. What is a string? How can we declare string in Python?

Ans:-A string is just a sequence of characters. It is among the most popular data types in Python. It can be created simply by enclosing characters in quotes.
     Assigning a string to a variable is done with the variable name followed by an equal sign and the string:

Example
a = "Hello"
print(a)

output:-Hello
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q27. How can we access the string using its index?

Ans:-In Python indexing of strings starts from 0 till n-1, where n is the size of string. So characters in string of size n, can be accessed from 0 to n-1.

Suppose we have a string i.e.
sampleStr = "Hello, this is a sample string"

Let’s access character at 5th index i.e.
sampleStr[5]

We can access and use the character i.e.
# Access character at index 5
print( "Character at index 5 is : " , sampleStr[5] )
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
Ans:- string = "Big Data iNeuron"
      print(string[9:]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
Ans:- string = "Big Data iNeuron"[::-1]
      print(string[:7])
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q30. Resverse the string given in the above question.
 
Ans:-string = "Big Data iNeuron"[::-1]
     print(string)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q31. How can you delete entire string at once?

Ans:-we use del keyword delete the entire string at once
     string = "Akash"
     del string
     print(string)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q32. What is escape sequence?

Ans:-To insert characters that are illegal in a string, use an escape character.
An escape character is a backslash \ followed by the character you want to insert.
An example of an illegal character is a double quote inside a string that is surrounded by double quotes:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
Ans:- string="iNeuron's Big Data Course"
      print(string)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q34. What is a list in Python?
Ans:-Lists are used to store multiple items in a single variable.

Lists are one of 4 built-in data types in Python used to store collections of data
------------------------------------------------------------------------------------------------------------------------------------------------------
Q35. How can you create a list in Python?
Ans:-Lists are created using square brackets:

Example
Create a List:

thislist = ["akash", "anurag", "abhay"]
print(thislist)
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q36. How can we access the elements in a list?
Ans:-List items are indexed and you can access them by referring to the index number:

Example
Print the second item of the list:

thislist = ["akash", "anurag", "abhay"]
print(thislist[1])
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 

lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
print(lst[4][2])
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Q38. Take a list as an input from the user and find the length of the list.
Ans:-# creating an empty list
lst = []

# number of elements as input
n = int(input("Enter number of elements : "))

# iterating till the range
for i in range(n):
	lst.append(int(input("enter element: "))) 
     print("List:")
     for element in lst:
      print(element)
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
Ans:-
lst = ["Welcome", "to", "Data", "course"]
lst.insert(3,"Big")
print(lst)
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Q40. What is a tuple? How is it different from list?
Ans:-Tuples are used to store multiple items in a single variable.
A tuple is a collection which is ordered and unchangeable. and the list are orderd and changable.

Tuples are written with round brackets. 

------------------------------------------------------------------------------------------------------------------------------------------
Q41. How can you create a tuple in Python?

thistuple = ("akash", "anurag", "abhay")
print(thistuple)

----------------------------------------------------------------------------------------------------------------------------------------
Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
Ans:-
thistuple = ("akash", "anurag", "abhay")
thistuple.append("orange")

we cannot append vlaues in tuple because the tuples are immutable.
-------------------------------------------------------------------------------------------------------------------------------------------
43. Can two tuple be appended. If yes, write a code for it. If not, why?               
Ans:-You are allowed to add tuples to tuples, so if you want to add one item, (or many), create a new tuple with the item(s), and add it to the existing tuple:

Example
Create a new tuple with the value "viswas", and add that tuple:

thistuple = ("akash", "anurag", "abhay")
y = ("viswas",)
thistuple += y

print(thistuple)      
---------------------------------------------------------------------------------------------------------------------------------------------------------
44. Take a tuple as an input and print the count of elements in it.
Ans:-                 
                  
----------------------------------------------------------------------------------------------------------------------------------------------------------                  
Q45. What are sets in Python?
Ans:-Sets are used to store multiple items in a single variable.
     A set is a collection which is unordered, unchangeable*, and unindexed.
--------------------------------------------------------------------------------------------------------------------------------------------------------
Q46. How can you create a set?           
Ans:- Sets are written with curly brackets.

Example
Create a Set:

thisset = {"apple", "banana", "cherry"}
print(thisset)                
                  
---------------------------------------------------------------------------------------                  
47. Create a set and add "iNeuron" in your set.
Ans:-thisset = {"akash","anurag","abhay"}
     thisset.add("iNeuron")
     print(thisset)
------------------------------------------------------------------------------------------
Q48. Try to add multiple values using add() function.
Ans:- it gives an error because add() only takes exactly one value
-----------------------------------------------------------------------------------------
Q49. How is update() different from add()?
ans:-To add items from another set into the current set, use the update() method.The object in the update() method does not have to be a set, 
     it can be any iterable object (tuples, lists, dictionaries etc.).
      add() only takes exactly one value
---------------------------------------------------------------------------------------------------------------------------------------------------
Q50. What is clear() in sets?
Ans:-The clear() method empties the set:
-----------------------------------------------------------------------------------------------------------------------------------
Q51. What is frozen set?
Ans:-Python frozenset() Method creates an immutable Set object from an iterable. It is a built-in Python function.
     As it is a set object therefore we cannot have duplicate values in the frozenset.
-----------------------------------------------------------------------------------------------------------------------------------
Q52. How is frozen set different from set?
Ans:-Python set()
A set is an unordered and unindexed collection of unique elements. Sets are mutable, you can change the elements using a built-in function like add(), remove(), etc.
Since the elements are mutable and not in order, they don’t have hash values. So you can’t access the elements with the help of index numbers.
Python frozenset()
A frozenset is an unordered and unindexed collection of unique elements. It is immutable and it is hashable. It is also called an immutable set. 
Since the elements are fixed, unlike sets you can't add or remove elements from the set.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q53. What is union() in sets? Explain via code.
Ans:-The union() method returns a new set with all items from both sets:

set1 = {"a", "b" , "c"}
set2 = {1, 2, 3}

set3 = set1.union(set2)
print(set3)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q54. What is intersection() in sets? Explain via code.

Ans:-The intersection() method will return a new set, that only contains the items that are present in both sets.
x = {"apple", "banana", "cherry"}
y = {"google", "microsoft", "apple"}

z = x.intersection(y)

print(z)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q55. What is dictionary ibn Python?
Ans:-Dictionaries are used to store data values in key:value pairs.

A dictionary is a collection which is ordered*, changeable and do not allow duplicates.
------------------------------------------------------------------------------------------------------------------------------

Q56. How is dictionary different from all other data structures.
ANS:-Dictionary items are presented in key:value pairs, and can be referred to by using the key name
-------------------------------------------------------------------------------------------------------------------------------
Q57. How can we delare a dictionary in Python?
Ans:-Dictionaries are written with curly brackets, and have keys and values:
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
----------------------------------------------------------------------------------------------------------------------------------
Q58. What will the output of the following?

var = {}
print(type(var))
ANS:-<Type 'dict'>
----------------------------------------------------------------------------------------------------------------------------------
Q59. How can we add an element in a dictionary?
Ans:-Adding an item to the dictionary is done by using a new index key and assigning a value to it:
---------------------------------------------------------------------------------------------------------------------------------
Q60. Create a dictionary and access all the values in that dictionary.
Ans:-thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}

x = thisdict.values()

print(x)
------------------------------------------------------------------------------------------------------------------------------------------------
Q61. Create a nested dictionary and access all the element in the inner dictionary.
Ans:-
myfamily = {
  "child1" : {
    "name" : "Emil",
    "year" : 2004
  },
  "child2" : {
    "name" : "Tobias",
    "year" : 2007
  },
  "child3" : {
    "name" : "Linus",
    "year" : 2011
  }
}

print(myfamily)
=====================================================================================================================================================
Q62. What is the use of get() function?
Ans:-Returns the value of the specified key
----------------------------------------------------------------------------------------------------------------------------------------------
Q63. What is the use of items() function?
Ans:-Returns a list containing a tuple for each key value pair
----------------------------------------------------------------------------------------------------------------------------------------------
Q64. What is the use of pop() function?
Ans:-Removes the element with the specified key
-------------------------------------------------------------------------------------------------------------------------------------------------
Q65. What is the use of popitems() function?
Ans:-Removes the last inserted key-value pair
----------------------------------------------------------------------------------------------------------------------------------------------------
Q66. What is the use of keys() function?
Ans:-Returns a list containing the dictionary's keys
--------------------------------------------------------------------------------------------------------------------------------------------------
Q67. What is the use of values() function?
Ans:-Returns a list of all the values in the dictionary
------------------------------------------------------------------------------------------------------------------------------------------------
Q68. What are loops in Python?
Ans:-A loop statement allows us to execute a statement or group of statements multiple times
------------------------------------------------------------------------------------------------------------------------------------------------
Q69. How many type of loop are there in Python?
Ans:-Python has two primitive loop commands:

while loops
for loops
---------------------------------------------------------------------------------------------------------------------------------------------------
Q70. What is the difference between for and while loops?
Ans:-for loop
Executes a sequence of statements multiple times and abbreviates the code that manages the loop variable.
while loop
Repeats a statement or group of statements while a given condition is TRUE. It tests the condition before executing the loop body.
---------------------------------------------------------------------------------------------------------------------------------------------------
Q71. What is the use of continue statement?
Ans:-With the continue statement we can stop the current iteration, and continue with the next:
---------------------------------------------------------------------------------------------------------------------------------------------------
Q72. What is the use of break statement?
Ans:-With the break statement we can stop the loop even if the while condition is true:
---------------------------------------------------------------------------------------------------------------------------------------------------
Q73. What is the use of pass statement?
Ans:-pass is a null operation -- when it is executed, nothing happens. It is useful as a placeholder when a statement is required syntactically, 
but no code needs to be executed
----------------------------------------------------------------------------------------------------------------------------------------------------------
Q74. What is the use of range() function?
Ans:-The range() is an in-built function in Python. It returns a sequence of numbers starting from zero and increment by 1 by default and stops before the given number.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q75. How can you loop over a dictionary?     
Ans:-You can loop through a dictionary by using a for loop.

When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Coding problems
Q76. Write a Python program to find the factorial of a given number.
Ans:-
num = int(input("Enter a number: "))    
factorial = 1    
if num < 0:    
   print(" Factorial does not exist for negative numbers")    
elif num == 0:    
   print("The factorial of 0 is 1")    
else:    
   for i in range(1,num + 1):    
       factorial = factorial*i    
   print("The factorial of",num,"is",factorial)    
   -----------------------------------------------------------------------------------------------------------------------------------------------------------------
Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100
Ans:-
def simple_interest(p,r,t):
    print('The principal is', p)
    print('The time period is', r)
    print('The rate of interest is',t)
     
    si = (p * r * t)/100
     
    print('The Simple Interest is', si)
    return si
     
simple_interest(8, 8, 6)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
Ans:-

 
def compound_interest(principal, rate, time):
 
    # Calculates compound interest
    Amount = principal * (pow((1 + rate / 100), time))
    CI = Amount - principal
    print("Compound interest is", CI)
 
compound_interest(10000, 10.25, 5)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q79. Write a Python program to check if a number is prime or not.
Ans:-
if num > 1:
for i in range(2, num//2):
if (num % i) == 0:
print(num, "is not a prime number")
break
else:
print(num, "is a prime number")
else:
print(num, "is not a prime number")
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q80. Write a Python program to check Armstrong Number.
Ans:-
# Python program to check if the number provided by the user is an Armstrong number or not
# take input from the user
num = int(input("Enter a number: "))
# initialize sum
sum = 0
# find the sum of the cube of each digit
temp = num
while temp > 0:
digit = temp % 10
sum += digit ** 3
temp //= 10
# display the result
if num == sum:
print(num,"is an Armstrong number")
else:
print(num,"is not an Armstrong number")
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q81. Write a Python program to find the n-th Fibonacci Number.
Ans:-
# defining the function for Fibonacci Series  
def Fibonacci_Series(n):   
    # using if-else conditional statement  
    if n < 0:  
        print("Oops! Incorrect input")  
    # First Fibonacci number is 0  
    elif n == 0:   
        return (0)   
    # Second Fibonacci number is 1   
    elif n == 1:  
        return (1)  
    else:  
        return (Fibonacci_Series(n - 1) + Fibonacci_Series(n - 2))   
# printing the 12th element of the Fibonacci Series  
print("12th Element of the Fibonacci Series:", Fibonacci_Series(12))
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q82. Write a Python program to interchange the first and last element in a list.
Ans:-
# Python program to interchange the 
# first and last element of a list

# Creating a list 
myList = [1, 7, 3, 90, 23, 4]
print("Initial List : ", myList)

# finding the length of list
length = len(myList)

# Swapping first and last element
temp = myList[0]
myList[0] = myList[length - 1]
myList[length - 1] = temp

print("List after Swapping : ", myList)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q83. Write a Python program to swap two elements in a list.
Ans:-
# Swap function
def swapPositions(list, pos1, pos2):
     
    list[pos1], list[pos2] = list[pos2], list[pos1]
    return list
 
# Driver function
List = [23, 65, 19, 90]
pos1, pos2  = 1, 3
 
print(swapPositions(List, pos1-1, pos2-1)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q84. Write a Python program to find N largest element from a list.
Ans:-
# Function returns N largest elements
def Nmaxelements(list1, N):
    final_list = []
 
    for i in range(0, N):
        max1 = 0
         
        for j in range(len(list1)):    
            if list1[j] > max1:
                max1 = list1[j];
                 
        list1.remove(max1);
        final_list.append(max1)
         
    print(final_list)
 
# Driver code
list1 = [2, 6, 41, 85, 0, 3, 7, 6, 10]
N = 2
 
# Calling the function
Nmaxelements(list1, N)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q85. Write a Python program to find cumulative sum of a list.
Ans:-
def Cumulative(lists):
    cu_list = []
    length = len(lists)
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)]
    return cu_list[1:]
 
# Driver Code
lists = [10, 20, 30, 40, 50]
print (Cumulative(lists)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q86. Write a Python program to check if a string is palindrome or not.
Ans:-
# Program to check if a string is palindrome or not
my_str = 'aIbohPhoBiA'

# make it suitable for caseless comparison
my_str = my_str.casefold()

# reverse the string
rev_str = reversed(my_str)

# check if the string is equal to its reverse
if list(my_str) == list(rev_str):
   print("The string is a palindrome.")
else:
   print("The string is not a palindrome.")
   --------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q87. Write a Python program to remove i'th element from a string.
Ans:_
# Python code to demonstrate method 
# to remove i-th character

myStr =  input('Enter the string : ')
i = int(input('Enter the index of character to be removed : '))

resStr = ""

for index in range(len(myStr)):
	if index != i:
		resStr = resStr + myStr[index]

# Printing all strings... 
print ("Entered string : " + myStr)
print ("String formed by removing i'th character : " + resStr)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q88. Write a Python program to check if a substring is present in a given string.
Ans:-
def check(str1, sstr): 
   if (str1.find(sstr) == -1): 
      print(sstr,"IS NOT PRESENT IN THE GIVEN STRING") 
   else: 
      print(sstr,"IS PRESENT IN THE GIVEN STRING") 
# Driver code 
str1 = input("Enter the string ::>")
sstr=input("Enter Substring ::>")
check(str1, sstr) 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q89. Write a Python program to find words which are greater than given length k.
Ans:-
# Python program to find words which are greater 
# than given length k

# Getting input from user 
myStr =  input('Enter the string : ')
k = int(input('Enter k  (value for accepting string) : '))
largerStrings = []

# Finding words with length greater than k
words = myStr.split(" ")
for word in words:
	if len(word) > k:
		largerStrings.append(word)
		
# printing values
print("All words which are greater than given length ", k, "are ", largerStrings)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q90. Write a Python program to extract unquire dictionary values.
Ans:-
my_dict = {'hi' : [5,3,8, 0],
   'there' : [22, 51, 63, 77],
   'how' : [7, 0, 22],
   'are' : [12, 11, 45],
   'you' : [56, 31, 89, 90]}

print("The dictionary is : ")
print(my_dict)

my_result = list(sorted({elem for val in my_dict.values() for elem in val}))

print("The unique values are : ")
print(my_result)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q91. Write a Python program to merge two dictionary.
Ans:-
Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
                  
